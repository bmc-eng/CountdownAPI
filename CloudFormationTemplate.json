{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "The template used to create an ECS Service from the ECS Console.",
    "Parameters": {
      "ECSClusterName": {
        "Type": "String",
        "Default": "countdown2"
      },
      "ECSServiceName": {
        "Type": "String",
        "Default": "countdownService"
      },
      "SecurityGroupName": {
        "Type": "CommaDelimitedList",
        "Default": "countdownAPISG"
      },
      "SubnetIDs": {
        "Type": "CommaDelimitedList",
        "Default": "subnet-832bbe8d,subnet-11944b4e,subnet-f3dd04d2,subnet-8a05d6ec,subnet-0dcf293c,subnet-0d046640"
      },
      "VpcID": {
        "Type": "String",
        "Default": "vpc-a835dad5"
      },
      "LoadBalancerName": {
        "Type": "String",
        "Default": "countdownLoadBalancer"
      }
    },
    "Resources": {
      "ECSService": {
        "Type": "AWS::ECS::Service",
        "Properties": {
          "Cluster": "countdown2",
          "TaskDefinition": "arn:aws:ecs:us-east-1:443230600320:task-definition/CountdownAPI:2",
          "LaunchType": "FARGATE",
          "ServiceName": "countdownService",
          "SchedulingStrategy": "REPLICA",
          "DesiredCount": 1,
          "LoadBalancers": [
            {
              "ContainerName": "countdown-image",
              "ContainerPort": 3000,
              "LoadBalancerName": {
                "Ref": "AWS::NoValue"
              },
              "TargetGroupArn": {
                "Ref": "TargetGroup"
              }
            }
          ],
          "NetworkConfiguration": {
            "AwsvpcConfiguration": {
              "AssignPublicIp": "ENABLED",
              "SecurityGroups": [
                {
                  "Ref": "SecurityGroup"
                }
              ],
              "Subnets": {
                "Ref": "SubnetIDs"
              }
            }
          },
          "PlatformVersion": "LATEST",
          "DeploymentConfiguration": {
            "MaximumPercent": 200,
            "MinimumHealthyPercent": 100,
            "DeploymentCircuitBreaker": {
              "Enable": true,
              "Rollback": true
            }
          },
          "DeploymentController": {
            "Type": "ECS"
          },
          "ServiceConnectConfiguration": {
            "Enabled": false
          },
          "Tags": [],
          "EnableECSManagedTags": true
        },
        "DependsOn": [
          "Listener"
        ]
      },
      "SecurityGroup": {
        "Type": "AWS::EC2::SecurityGroup",
        "Properties": {
          "GroupDescription": "countdownAPI security group",
          "GroupName": "countdownAPISG",
          "VpcId": "vpc-a835dad5",
          "SecurityGroupIngress": [
            {
              "FromPort": 3000,
              "ToPort": 3000,
              "IpProtocol": "tcp",
              "CidrIp": "0.0.0.0/0"
            },
            {
              "FromPort": 3000,
              "ToPort": 3000,
              "IpProtocol": "tcp",
              "CidrIpv6": "::/0"
            }
          ]
        }
      },
      "LoadBalancer": {
        "Type": "AWS::ElasticLoadBalancingV2::LoadBalancer",
        "Properties": {
          "Type": "application",
          "Name": "countdownLoadBalancer",
          "SecurityGroups": [
            {
              "Ref": "SecurityGroup"
            }
          ],
          "Subnets": {
            "Ref": "SubnetIDs"
          }
        }
      },
      "TargetGroup": {
        "Type": "AWS::ElasticLoadBalancingV2::TargetGroup",
        "Properties": {
          "HealthCheckPath": "/",
          "Name": "countdown-target-group",
          "Port": 80,
          "Protocol": "HTTP",
          "TargetType": "ip",
          "HealthCheckProtocol": "HTTP",
          "VpcId": {
            "Ref": "VpcID"
          }
        }
      },
      "Listener": {
        "Type": "AWS::ElasticLoadBalancingV2::Listener",
        "Properties": {
          "DefaultActions": [
            {
              "Type": "forward",
              "TargetGroupArn": {
                "Ref": "TargetGroup"
              }
            }
          ],
          "LoadBalancerArn": {
            "Ref": "LoadBalancer"
          },
          "Port": "3000",
          "Protocol": "HTTP"
        }
      },
      "AutoScalingTarget": {
        "Type": "AWS::ApplicationAutoScaling::ScalableTarget",
        "Properties": {
          "MaxCapacity": "2",
          "MinCapacity": "1",
          "ResourceId": "service/countdown2/countdownService",
          "RoleARN": "arn:aws:iam::443230600320:role/aws-service-role/ecs.application-autoscaling.amazonaws.com/AWSServiceRoleForApplicationAutoScaling_ECSService",
          "ScalableDimension": "ecs:service:DesiredCount",
          "ServiceNamespace": "ecs"
        },
        "DependsOn": [
          "ECSService"
        ]
      },
      "AutoScalingPolicy": {
        "Type": "AWS::ApplicationAutoScaling::ScalingPolicy",
        "Properties": {
          "PolicyName": "countdownAS",
          "PolicyType": "TargetTrackingScaling",
          "ResourceId": "service/countdown2/countdownService",
          "ScalingTargetId": {
            "Ref": "AutoScalingTarget"
          },
          "TargetTrackingScalingPolicyConfiguration": {
            "ScaleInCooldown": "300",
            "ScaleOutCooldown": "300",
            "TargetValue": "70",
            "PredefinedMetricSpecification": {
              "PredefinedMetricType": "ECSServiceAverageCPUUtilization"
            }
          }
        }
      }
    },
    "Outputs": {
      "ClusterName": {
        "Description": "The cluster used to create the service.",
        "Value": {
          "Ref": "ECSClusterName"
        }
      },
      "ECSService": {
        "Description": "The created service.",
        "Value": {
          "Ref": "ECSService"
        }
      },
      "LoadBalancer": {
        "Description": "The created load balancer.",
        "Value": {
          "Ref": "LoadBalancer"
        }
      },
      "Listener": {
        "Description": "The created listener.",
        "Value": {
          "Ref": "Listener"
        }
      },
      "TargetGroup": {
        "Description": "The created target group.",
        "Value": {
          "Ref": "TargetGroup"
        }
      },
      "AutoScalingTarget": {
        "Value": {
          "Ref": "AutoScalingTarget"
        }
      },
      "AutoScalingPolicy": {
        "Value": {
          "Ref": "AutoScalingPolicy"
        }
      }
    }
  }